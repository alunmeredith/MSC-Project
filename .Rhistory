knitr::opts_chunk$set(include = FALSE)
library(XML)
library(dplyr)
xml <- xml2::read_xml("testdata.xml")
lines <- readLines("testdata.xml")
xmltags <- grep("<?xml", lines)
num_docs <- length(xmltags)
lines <- readLines("../DataFiles/testdata.xml")
xmltags <- grep("<?xml", lines)
num_docs <- length(xmltags)
parse_xml <- function(text.xml.doc) {
doc1_xml <- xmlTreeParse(text.xml.doc, asText = T, useInternalNodes = T)
# Creates a nested list of xml structure up to 3 layers deep
f <- function(L1) {
# Returns the name-value pair of first attribute
a <- xmlAttrs(L1)
b <- xmlSApply(L1, function(L2) {
d <- xmlValue(L2)
e <- xmlSApply(L2, xmlValue)
ifelse(length(e) == 0, return(d), return(e))
})
# Convert matrix to named list of characters so unlist retains name information later
if (class(b) == "matrix") {
nam <- rownames(b)
b <- as.character(b)
names(b) <- nam
}
if (!is.null(a)) b <- c(id = a,b)
return(b)
}
citations_listed <- xpathSApply(doc1_xml, "//us-references-cited/us-citation", fun = function(L0) xmlSApply(L0, f))
citations.flat <- lapply(citations_listed, unlist)
if (length(citations.flat) == 0) return(NULL)
df <- data.frame(t(citations.flat[[1]]), stringsAsFactors = F)
for(i in 2:(length(citations.flat)))
df <- bind_rows(df, as.data.frame(t(citations.flat[[i]]), stringsAsFactors = F))
return(df)
}
df <- parse_xml(xml1)
xml <- xml2::read_xml("../DataFiles/testdata.xml")
xml1 <- paste(lines[xmltags[1]:(xmltags[2]-1)], collapse = "")
xml2::xml_structure(xml2::read_xml(xml1), indent = 4)
parse_xml <- function(text.xml.doc) {
doc1_xml <- xmlTreeParse(text.xml.doc, asText = T, useInternalNodes = T)
# Creates a nested list of xml structure up to 3 layers deep
f <- function(L1) {
# Returns the name-value pair of first attribute
a <- xmlAttrs(L1)
b <- xmlSApply(L1, function(L2) {
d <- xmlValue(L2)
e <- xmlSApply(L2, xmlValue)
ifelse(length(e) == 0, return(d), return(e))
})
# Convert matrix to named list of characters so unlist retains name information later
if (class(b) == "matrix") {
nam <- rownames(b)
b <- as.character(b)
names(b) <- nam
}
if (!is.null(a)) b <- c(id = a,b)
return(b)
}
citations_listed <- xpathSApply(doc1_xml, "//us-references-cited/us-citation", fun = function(L0) xmlSApply(L0, f))
citations.flat <- lapply(citations_listed, unlist)
if (length(citations.flat) == 0) return(NULL)
df <- data.frame(t(citations.flat[[1]]), stringsAsFactors = F)
for(i in 2:(length(citations.flat)))
df <- bind_rows(df, as.data.frame(t(citations.flat[[i]]), stringsAsFactors = F))
return(df)
}
df <- parse_xml(xml1)
df
load("citations.file1")
load("../DataFiles/citations.file1")
lines[1:100]
